@startuml
skinparam classAttributeIconSize 0

interface ApiDistancia {
+ Call<List<Pais>> paises(int)
+ Call<List<Provincia>> provincias(int, String)
+ Call<List<Municipio>> municipios(int, String)
+ Call<List<Localidad>> localidades(int, String)
+ Call<Distancia> distancia(String, String, String, String, String, String)
}

class ArchivoConfig {

+ String obtenerUrlAPI()
+ String obtenerTokenAutorizacion()
}

class Distancia {
- valor: String
- unidad: String
}

class Municipio {
- id: String
- nombre: String
- provincia: Provincia
}

class Pais {
- id: String
- nombre: String
}

class Provincia {
- id: String
- nombre: String
- pais: Pais
}

class Localidad {
- id: String
- nombre : String
- codPostal : String
}

class Tramo {
-partida: Espacio
-llegada: Espacio
-transporte: MedioDeTransporte
-miembros: [Miembro]

+Double calcularDistancia()
+void agregarMiembro(Miembro)
}

class TokenInterceptor {

+ Response intercept(Chain)
}

class ServicioApiDistancia {
- instance: ServicioApiDistancia
- retrofit : Retrofit
- urlApi : String
- tokenInterceptor : TokenInterceptor
- gson : Gson

+ List<Pais> listadoDePaises(int)
+ List<Provincia> listadoDeProvincias(int, String)
+ List<Municipio> listadoMunicipios(int, String)
+ List<Localidad> listadoLocalidades(int, String)
+ Double obtenerDistancia(Espacio, Espacio)
+ Distancia calculoDistancia(Espacio, Espacio)
- String obtenerIdPais()
- String obtenerIdLocalidad(String, String, String)
}

ApiDistancia -- Pais
ApiDistancia -- Provincia
ApiDistancia -- Localidad
ApiDistancia -- Municipio
ApiDistancia -- Distancia

ServicioApiDistancia --> ServicioApiDistancia
ServicioApiDistancia ..> ApiDistancia
ServicioApiDistancia ..> ArchivoConfig
ServicioApiDistancia --> TokenInterceptor

TokenInterceptor ..> ArchivoConfig

Provincia --> Pais

Municipio --> Provincia

Tramo ..> ServicioApiDistancia

@enduml