@startuml
skinparam classAttributeIconSize 0

package "miembro" #DDDDDD {
    class Persona {
    -nombre: String
    -apellido: String
    -nroDocumento: String
    -tipoDocumento: TipoDocumento
    -ubicacion: Hogar
    -usuario: Usuario
    }

    class Miembro {
    -persona: Persona
    -area: Area

    +Double calcularHuellaCarbonoMiembro()
    +void cargarTrayecto(Trayecto)
    }

    enum TipoDocumento {
    DNI,
    LE,
    LC
    }
}

package "organizacion" #DDDDDD {

    class Contacto {
    -mail: String
    -numeroTelefono: String
    -nombre: String
    }

    class AgenteSectorial {
    -sectorTerritorial: String

    +Double huellaDeCarbonoPorSector()
    }

    class Organizacion {
    -razonSocial: String
    -tipo: TipoOrganizacion
    -clasificacion: Clasificacion
    -sectores: [Area]
    -transformador: Transformador
    -contacto: [Contacto]

    +void agregarArea(Area)
    +Double calcularHuellaCarbonoTotal(Double)
    +Double calcularHuellaCarbonoSectorial(Double, String)
    +Double impactoGeneradoPor(Miembro)
    +Double indicadorDeHCPorArea(Area)
    }

    class Area {
    -nombre: String
    -miembros: [Miembro]
    -ubicacion: EspacioDeTrabajo
    -trayectosRegistrados: [Trayecto]
    -trayectosPendientes: [Trayecto]
    -calculadoraHCActividad: CalculadoraHCActividad

    +void registrarMiembro(Miembro)
    +void aceptarVinculacion(Trayecto)
    +void agregarVinculacion(Trayecto)
    +Double calcularHuellaCarbonoTotalArea()
    }

    enum Clasificacion {
    MINISTERIO,
    UNIVERSIDAD,
    ESCUELA,
    ESCUELA_DEL_SECTOR_PRIMARIO,
    ESCUELA_DEL_SECTOR_SECUNDARIO
    }

    enum TipoOrganizacion {
    GUBERNAMENTAL,
    ONG,
    EMPRESA,
    INSTITUCION
    }
}

package "notificadores" #DDDDDD {

    abstract MedioDeNotificacion {

    +void notificar(Contacto)
    }

    class Mailer extends MedioDeNotificacion {

    }

    class Whatsapperia extends MedioDeNotificacion {

    }
}

package "repositorios" #DDDDDD {

    class RepoOrganizaciones {
    -organizaciones: [Organizacion]
    -instance: RepoOrganizaciones

    }

    class RepoTransportePublico {
    -lineas: <String, [Parada]>
    -instance: RepoTransportePublico

    }

    class RepositorioUsuarios {
    -salt: [byte]
    -loginUsuarios: <String,String>
    -instance: RepositorioUsuarios

    +String generarHash(String, byte[])
    +void validarContrasenia(String)
    +void agregarUsuario(String,String)
    +boolean contraseniaCoincide(String, String)
    }
}

package "huellaDeCarbono" #DDDDDD {

    class CalculadoraHCActividad {
    -factorEmisionGas: Double
    -factorEmisionDiesel: Double
    -factorEmisionKerosene: Double
    -factorEmisionFuel: Double
    -factorEmisionNafta: Double
    -factorEmisionCarbon: Double
    -factorEmisionCarbonLenia: Double
    -factorEmisionLenia: Double
    -factorEmisionCombConsumidoGasoil: Double
    -factorEmisionCombConsumidoGNC: Double
    -factorEmisionCombConsumidoNafta: Double
    -factorEmisionElectricidad: Double
    -factorEmisionLogProdRes: Double

    +Double calcularHuellaCarbonoLogProdRes(Double)
    +Double calcularHuellaCarbonoCombElec()

    }

    package "espacio" {
        abstract class Espacio {
        -latitud: Double
        -longitud: Double
        -provincia: String
        -direccion: String
        -numero: int
        -codigoPostal: int
        -barrio: String
        -municipio: String
        -localidad: String
        }

        class Hogar extends Espacio {
        -piso: int
        -departamento: String
        -tipoHogar: TipoHogar
        }

        class Parada extends Espacio {

        }

        class EspacioDeTrabajo extends Espacio {
        -piso: int
        -unidad: String
        }

        enum TipoHogar {
        CASA,
        DEPARTAMENTO,
        RESIDENCIA
        }
    }

    package "medioDeTransporte" {

        abstract class MedioDeTransporte {
        -factorEmision: Double

        +boolean puedoSerCompartido()
        }

        class VehiculoParticular extends MedioDeTransporte {
        -tipoVehiculo: TipoVehiculo
        -tipoCombustible: TipoCombustible
        }

        enum TipoCombustible {
        GNC,
        NAFTA,
        ELECTRICO,
        GASOIL
        }

        enum TipoVehiculo {
        AUTO,
        MOTO,
        CAMIONETA
        }

        class TransporteNoMotorizado extends MedioDeTransporte {
        -tipoNoMotorizado: TipoNoMotorizado
        }

        enum TipoNoMotorizado {
        BICI,
        A_PIE,
        OTROS
        }

        class ServicioContratado extends MedioDeTransporte {
        -tipoServicioContratado: TipoServicioContratado
        }

        enum TipoServicioContratado {
        TAXI,
        REMIS
        }

        class TransportePublico extends MedioDeTransporte {
        -nombre: String
        -tipoTransportePublico: TipoTransportePublico
        }

        enum TipoTransportePublico {
        TREN,
        SUBTE,
        COLECTIVO
        }
    }

    package "trayecto" {

        class Trayecto {
        -partida: Espacio
        -llegada: Espacio
        -tramos: [Tramo]

        +Double calcularDistanciaTotal()
        +Double calcularHuellaCarbonoTotalTrayecto()
        }

        class Tramo {
        -partida: Espacio
        -llegada: Espacio
        -transporte: MedioDeTransporte
        -miembros: [Miembro]

        +Double calcularDistancia()
        +void agregarMiembro(Miembro)
        +Double calcularHuellaCarbonoTramo()
        }

        class ServicioApiDistancia {

        }
        note right: El modelo de la API est√° en su propio DC

    }
}

package "excel_ETL" #DDDDDD {

    class TablaDatosActividad {
    -listaDatosActividad : List<DatosDeLaActividad>
    }

    class DatosDeLaActividad {
    -actividad:String
    -tipoDeConsumo:String
    -consumo:Consumo
    -periodoDeImputacion:String

    }

    class Consumo {
    -valor: Double
    -periodicidad:String
    }

    class Transformador {
    -tablaDatoActividad: TablaDatosActividad

    + TablaDatosActividad obtenerDatos(String)
    }
}

package "roles" #DDDDDD {

    abstract Usuario {
    -usuario: String
    +miValidador : ValidadorDeMetricas
    }

    class UsuarioComun extends Usuario {
    }

    class Administrador extends Usuario {
    -calculadoraHCActividad: CalculadoraHCActividad

    +void setFactorEmision(Double factorEmision)
    }
}

Miembro ..> Trayecto

Area --> EspacioDeTrabajo
Area --> "*" Miembro
Area --> "2*" Trayecto
Area --> CalculadoraHCActividad

Organizacion --> "*" Area
Organizacion --> TipoOrganizacion
Organizacion --> Clasificacion
Organizacion --> Transformador
Organizacion --> Contacto

Transformador --> TablaDatosActividad

Trayecto --> "2" Espacio
Trayecto --> "*" Tramo

DatosDeLaActividad --> Consumo

TablaDatosActividad --> "*" DatosDeLaActividad

Tramo --> "2" Espacio
Tramo --> MedioDeTransporte
Tramo --> "*" Miembro
Tramo ..> ServicioApiDistancia

Hogar --> TipoHogar

VehiculoParticular --> TipoVehiculo
VehiculoParticular --> TipoCombustible

ServicioContratado --> TipoServicioContratado

TransportePublico --> TipoTransportePublico

TransporteNoMotorizado --> TipoNoMotorizado

RepositorioUsuarios --> Usuario
RepositorioUsuarios --> RepositorioUsuarios

RepoTransportePublico --> "*" Parada
RepoTransportePublico --> RepoTransportePublico

RepoOrganizaciones --> RepoOrganizaciones
RepoOrganizaciones --> "*" Organizacion

Miembro --> Persona

Persona --> Hogar
Persona --> Usuario
Persona --> TipoDocumento

Administrador --> CalculadoraHCActividad

MedioDeNotificacion ..> Contacto

AgenteSectorial ..> RepoOrganizaciones

@enduml