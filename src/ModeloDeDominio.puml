@startuml
skinparam classAttributeIconSize 0

class Miembro {
-nombre: String
-apellido: String
-nroDocumento: String
-tipoDocumento: TipoDocumento
-organizaciones: [Organizacion]
-ubicacion: Hogar
-usuario: Usuario

+ void cargarTrayecto(Trayecto)
}

class Organizacion {
-razonSocial: String
-tipo: TipoOrganizacion
-clasificacion: Clasificacion
-sectores: [Area]
-trayectos: [Trayecto]
-repoOrganizaciones: RepoOrganizaciones

+void aceptarVinculacion(Trayecto)
}

class RepoOrganizaciones {
-organizaciones: [Organizacion]
-instance: RepoOrganizaciones

-Impresora()
+RepoOrganizaciones getInstance()
}

class Trayecto {
-partida: Espacio
-llegada: Espacio
-tramos: [Tramo]
}

class Area {
-nombre: String
-miembros: [Miembro]
-ubicacion: EspacioDeTrabajo

+void registrarMiembro(Miembro, Trayecto)
}

enum TipoDocumento {
DNI,
LE,
LC
}

enum Clasificacion {
MINISTERIO,
UNIVERSIDAD,
ESCUELA,
ESCUELA_DEL_SECTOR_PRIMARIO,
ESCUELA_DEL_SECTOR_SECUNDARIO
}

enum TipoOrganizacion {
GUBERNAMENTAL,
ONG,
EMPRESA,
INSTITUCION
}

abstract class MedioDeTransporte {

}

class Tramo {
-partida: Espacio
-llegada: Espacio
-transporte: MedioDeTransporte
}

class VehiculoParticular extends MedioDeTransporte {
-tipoVehiculo: TipoVehiculo
-tipoCombustible: TipoCombustible
}

enum TipoCombustible {
GNC,
NAFTA,
ELECTRICO,
GASOIL
}

enum TipoVehiculo {
AUTO,
MOTO,
CAMIONETA
}

class TransporteNoMotorizado extends MedioDeTransporte {
-tipoNoMotorizado: TipoNoMotorizado
}

enum TipoNoMotorizado {
BICI,
A_PIE,
OTROS
}

class ServicioContratado extends MedioDeTransporte {
-tipoServicioContratado: TipoServicioContratado
}

enum TipoServicioContratado {
TAXI,
REMIS
}

class TransportePublico extends MedioDeTransporte {
-tipoTransportePublico: TipoTransportePublico
}

enum TipoTransportePublico {
TREN,
SUBTE,
COLECTIVO
}

abstract class Espacio {
-latitud: Double
-longitud: Double
-direccion: String
-numero: int
-codigoPostal: int
-barrio: String
}

class Hogar extends Espacio {
-piso: int
-departamento: String
-tipo: TipoHogar
}

class Parada extends Espacio {

}

class RepoTransportePublico {
-lineas: <String, [Parada]>
-instance: RepoTransportePublico

-RepoTransportePublico()
+RepoTransportePublico getInstance()
}

class EspacioDeTrabajo extends Espacio {
-piso: int
-unidad: String
}

enum TipoHogar {
CASA,
DEPARTAMENTO,
RESIDENCIA
}

class Usuario {
-usuario: String
-contrasenia: String
-esAdministrador: boolean
}

class RepositorioUsuarios {
-salt: [byte]
-usuariosLogin: <String,String>
- instance: RepositorioUsuarios

-RepositorioUsuarios()
+RepositorioUsuarios getInstance()
+String generarHash(String, String)
+String getSalt()
+void validarContrasenia(String)
}

Miembro --> TipoDocumento
Miembro --> Hogar
Miembro --> Usuario
Miembro ..> Trayecto

Organizacion --> "*" Area
Organizacion --> TipoOrganizacion
Organizacion --> Clasificacion
Organizacion --> "*" Trayecto
Organizacion --> RepoOrganizaciones

Trayecto --> "2" Espacio
Trayecto --> "*" Tramo

Tramo --> "2" Espacio
Tramo --> MedioDeTransporte

Hogar --> TipoHogar

VehiculoParticular --> TipoVehiculo
VehiculoParticular --> TipoCombustible

ServicioContratado --> TipoServicioContratado

TransportePublico --> TipoTransportePublico

TransporteNoMotorizado --> TipoNoMotorizado

Usuario --> RepositorioUsuarios

Parada ..> RepoTransportePublico

@enduml